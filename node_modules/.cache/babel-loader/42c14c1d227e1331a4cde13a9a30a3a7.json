{"ast":null,"code":"import _objectSpread from\"/Users/hirotaharuki/firebase-react-sample/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/hirotaharuki/firebase-react-sample/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{messagesRef,pushMessage}from\"../firebase\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var App=function App(){var _useState=useState(\"default\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(\"text\"),_useState4=_slicedToArray(_useState3,2),text=_useState4[0],setText=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),messages=_useState6[0],setMessages=_useState6[1];useEffect(function(){messagesRef.orderByKey().limitToLast(10).on(\"value\",function(snapshot){var messages=snapshot.val();if(messages===null)return;var entries=Object.entries(messages);var newMessages=entries.map(function(data){var _data=_slicedToArray(data,2),key=_data[0],message=_data[1];return _objectSpread({key:key},message);});setMessages(newMessages);});},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[messages.map(function(message){return/*#__PURE__*/_jsxs(\"div\",{children:[message.name,\":\",message.text]},message.key);}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:name,onChange:function onChange(e){return setName(function(name){return name=e.target.value;});}}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:text,onChange:function onChange(e){return setText(function(text){return text=e.target.value;});}}),/*#__PURE__*/_jsxs(\"button\",{onClick:function onClick(){return pushMessage({name:name,text:text});},children:[\" \",\"push\",\" \"]})]});};export default App;","map":{"version":3,"sources":["/Users/hirotaharuki/firebase-react-sample/src/components/App.js"],"names":["React","useState","useEffect","messagesRef","pushMessage","App","name","setName","text","setText","messages","setMessages","orderByKey","limitToLast","on","snapshot","val","entries","Object","newMessages","map","data","key","message","e","target","value"],"mappings":"+TAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,C,6IAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,eACQJ,QAAQ,CAAC,SAAD,CADhB,wCACTK,IADS,eACHC,OADG,8BAEQN,QAAQ,CAAC,MAAD,CAFhB,yCAETO,IAFS,eAEHC,OAFG,8BAGgBR,QAAQ,CAAC,EAAD,CAHxB,yCAGTS,QAHS,eAGCC,WAHD,eAKhBT,SAAS,CAAC,UAAM,CACdC,WAAW,CACRS,UADH,GAEGC,WAFH,CAEe,EAFf,EAGGC,EAHH,CAGM,OAHN,CAGe,SAACC,QAAD,CAAc,CACzB,GAAML,CAAAA,QAAQ,CAAGK,QAAQ,CAACC,GAAT,EAAjB,CACA,GAAIN,QAAQ,GAAK,IAAjB,CAAuB,OACvB,GAAMO,CAAAA,OAAO,CAAGC,MAAM,CAACD,OAAP,CAAeP,QAAf,CAAhB,CACA,GAAMS,CAAAA,WAAW,CAAGF,OAAO,CAACG,GAAR,CAAY,SAACC,IAAD,CAAU,0BACjBA,IADiB,IACjCC,GADiC,UAC5BC,OAD4B,UAExC,sBAASD,GAAG,CAAHA,GAAT,EAAiBC,OAAjB,EACD,CAHmB,CAApB,CAIAZ,WAAW,CAACQ,WAAD,CAAX,CACD,CAZH,EAaD,CAdQ,CAcN,EAdM,CAAT,CAgBA,mBACE,2BACGT,QAAQ,CAACU,GAAT,CAAa,SAACG,OAAD,qBACZ,uBACGA,OAAO,CAACjB,IADX,KACkBiB,OAAO,CAACf,IAD1B,GAAUe,OAAO,CAACD,GAAlB,CADY,EAAb,CADH,cAME,cACE,IAAI,CAAC,MADP,CAEE,KAAK,CAAEhB,IAFT,CAGE,QAAQ,CAAE,kBAACkB,CAAD,QAAOjB,CAAAA,OAAO,CAAC,SAACD,IAAD,QAAWA,CAAAA,IAAI,CAAGkB,CAAC,CAACC,MAAF,CAASC,KAA3B,EAAD,CAAd,EAHZ,EANF,cAWE,cACE,IAAI,CAAC,MADP,CAEE,KAAK,CAAElB,IAFT,CAGE,QAAQ,CAAE,kBAACgB,CAAD,QAAOf,CAAAA,OAAO,CAAC,SAACD,IAAD,QAAWA,CAAAA,IAAI,CAAGgB,CAAC,CAACC,MAAF,CAASC,KAA3B,EAAD,CAAd,EAHZ,EAXF,cAgBE,gBAAQ,OAAO,CAAE,yBAAMtB,CAAAA,WAAW,CAAC,CAAEE,IAAI,CAAEA,IAAR,CAAcE,IAAI,CAAEA,IAApB,CAAD,CAAjB,EAAjB,WACG,GADH,QAEO,GAFP,GAhBF,GADF,CAuBD,CA5CD,CA8CA,cAAeH,CAAAA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { messagesRef, pushMessage } from \"../firebase\"\n\nconst App = () => {\n  const [name, setName] = useState(\"default\")\n  const [text, setText] = useState(\"text\")\n  const [messages, setMessages] = useState([])\n\n  useEffect(() => {\n    messagesRef\n      .orderByKey()\n      .limitToLast(10)\n      .on(\"value\", (snapshot) => {\n        const messages = snapshot.val()\n        if (messages === null) return\n        const entries = Object.entries(messages)\n        const newMessages = entries.map((data) => {\n          const [key, message] = data\n          return { key, ...message }\n        })\n        setMessages(newMessages)\n      })\n  }, [])\n\n  return (\n    <>\n      {messages.map((message) => (\n        <div key={message.key}>\n          {message.name}:{message.text}\n        </div>\n      ))}\n      <input\n        type=\"text\"\n        value={name}\n        onChange={(e) => setName((name) => (name = e.target.value))}\n      />\n      <input\n        type=\"text\"\n        value={text}\n        onChange={(e) => setText((text) => (text = e.target.value))}\n      />\n      <button onClick={() => pushMessage({ name: name, text: text })}>\n        {\" \"}\n        push{\" \"}\n      </button>\n    </>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}